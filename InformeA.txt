Informe Puntos 3 y 4

a) Análisis del problema y consideraciones para la alternativa de solución propuesta.

Punto 3: Configurar cerraduras de la cerradura X con estructuras M variables

El problema consiste en desarrollar un módulo que permita configurar cerraduras X compuestas por múltiples estructuras M de diferentes tamaños. La cantidad de estructuras M y sus dimensiones (filas y columnas) deben ser configurables por el usuario.

Para abordar este problema, se propone la siguiente alternativa de solución:

-Crear una estructura Cerradura que contenga un vector de EstructuraM.

-Implementar una función configureCerradura() que solicite al usuario la cantidad de estructuras M a incluir en la cerradura.

-Para cada estructura M, solicitar al usuario el tamaño (filas y columnas) y crear una instancia de EstructuraM utilizando la función crearEstructuraM(int tamano) del punto 1.

-Agregar cada EstructuraM creada al vector dentro de la estructura Cerradura.

-Devolver la Cerradura configurada con las estructuras M especificadas.

Consideraciones:

-Reutilizar la función crearEstructuraM(int tamano) del punto 1 para crear cada estructura M dentro de la cerradura.

-Permitir una configuración flexible de la cerradura, donde el usuario pueda especificar la cantidad y tamaño de las estructuras M.

Punto 4: Validar una regla K sobre una configuración dada de la cerradura X

El problema consiste en implementar funciones que permitan validar si una regla K se cumple para una configuración dada de la cerradura X.

Para abordar este problema, se propone la siguiente alternativa de solución:

-Implementar una función validarRegla(const Cerradura& cerradura, const vector<int>& regla) que reciba una cerradura configurada y una regla K como parámetros.

-Dentro de la función, verificar si la regla K tiene un formato válido y si los índices de fila, columna y estructura están dentro de los límites permitidos.

-Iterar sobre cada comparación en la regla K y extraer los índices de fila, columna y estructuras M involucradas, así como el signo de comparación.
-Acceder a los valores de las celdas correspondientes en las estructuras M de la cerradura utilizando los índices extraídos.

-Realizar las comparaciones indicadas por la regla K entre los valores de las celdas y verificar si se cumple la condición.

-Devolver true si todas las comparaciones de la regla K se cumplen, o false en caso contrario.

Consideraciones:

-Utilizar las funciones implementadas en los puntos 1 y 2 para acceder y manipular las estructuras M dentro de la cerradura.

-Manejar adecuadamente los casos de error, como reglas K con formato incorrecto o índices fuera de rango.

b) Esquema donde se describen las tareas definidas en el desarrollo de los algoritmos.

Punto 3: Configurar cerradura

+-----------------------------------+
|        configureCerradura()       |
+-----------------------------------+
                 |
                 V
+------------------------------------+
| Solicitar cantidad de estructuras M|
+------------------------------------+
                 |
                 V
+-----------------------------------+
|       Crear Cerradura vacía       |
+-----------------------------------+
                 |
                 V
+-----------------------------------+
|       Repetir para cada            |
|         estructura M               |
+-----------------------------------+
                 |
                 V
+-----------------------------------+
| Solicitar tamaño de estructura M  |
+-----------------------------------+
                 |
                 V
+------------ -------------+
| Crear EstructuraM con    |
|crearEstructuraM(tamano)  |
+--------------------------+
                 |
                 V
+--------------------------+
| Agregar EstructuraM a    |
| la Cerradura             | 
+--------------------------+
                 |
                 V
+---------------------- ------+
|      Devolver Cerradura     |
+-----------------------------+


